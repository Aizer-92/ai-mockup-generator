"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –≥–∞–ª–µ—Ä–µ–∏
"""

import streamlit as st
import os
import time
from services.upload_services import get_server_mockups, get_ftp_mockups, get_google_drive_mockups

def show_gallery_statistics(mockups: list):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–∞–ª–µ—Ä–µ–∏"""
    
    if not mockups:
        st.info("üìä –ì–∞–ª–µ—Ä–µ—è –ø—É—Å—Ç–∞")
        return
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∏–ª—è–º
    styles = {}
    applications = {}
    
    for mockup in mockups:
        if "metadata" in mockup:
            style = mockup["metadata"].get("mockup_style", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            application = mockup["metadata"].get("logo_application", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            
            styles[style] = styles.get(style, 0) + 1
            applications[application] = applications.get(application, 0) + 1
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    col1, col2 = st.columns(2)
    
    with col1:
        st.write("**üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∏–ª—è–º:**")
        for style, count in sorted(styles.items(), key=lambda x: x[1], reverse=True):
            st.write(f"- {style}: {count}")
    
    with col2:
        st.write("**üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –Ω–∞–Ω–µ—Å–µ–Ω–∏—è:**")
        for app, count in sorted(applications.items(), key=lambda x: x[1], reverse=True):
            st.write(f"- {app}: {count}")

def get_all_mockups_data():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –º–æ–∫–∞–ø–æ–≤ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
    
    all_mockups = []
    
    # –ú–æ–∫–∞–ø—ã –∏–∑ session_state
    if "generated_mockups" in st.session_state:
        session_mockups = st.session_state.generated_mockups
        all_mockups.extend(session_mockups)
    
    # –ú–æ–∫–∞–ø—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        server_mockups = get_server_mockups(50)
        all_mockups.extend(server_mockups)
    except Exception as e:
        st.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–∫–∞–ø–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    
    # –ú–æ–∫–∞–ø—ã —Å FTP
    try:
        ftp_mockups = get_ftp_mockups(50)
        all_mockups.extend(ftp_mockups)
    except Exception as e:
        st.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–∫–∞–ø–æ–≤ —Å FTP: {e}")
    
    # –ú–æ–∫–∞–ø—ã –∏–∑ Google Drive (–æ—Ç–∫–ª—é—á–µ–Ω–æ)
    try:
        gdrive_mockups = get_google_drive_mockups(50)
        all_mockups.extend(gdrive_mockups)
    except Exception as e:
        st.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–∫–∞–ø–æ–≤ –∏–∑ Google Drive: {e}")
    
    return all_mockups

def show_storage_info():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞—Ö"""
    
    st.subheader("üíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞—Ö")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â
    storage_info = []
    
    # Session state
    if "generated_mockups" in st.session_state:
        session_mockups = st.session_state.generated_mockups
        storage_info.append(f"–ø–∞–º—è—Ç—å —Å–µ—Å—Å–∏–∏ ({len(session_mockups)} –º–æ–∫–∞–ø–æ–≤)")
    
    # –°–µ—Ä–≤–µ—Ä
    try:
        server_mockups = get_server_mockups(10)
        storage_info.append(f"—Å–µ—Ä–≤–µ—Ä ({len(server_mockups)} –º–æ–∫–∞–ø–æ–≤)")
    except:
        storage_info.append("—Å–µ—Ä–≤–µ—Ä (–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)")
    
    # FTP
    try:
        ftp_mockups = get_ftp_mockups(10)
        storage_info.append(f"FTP ({len(ftp_mockups)} –º–æ–∫–∞–ø–æ–≤)")
    except:
        storage_info.append("FTP (–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)")
    
    # Google Drive (–æ—Ç–∫–ª—é—á–µ–Ω–æ)
    storage_info.append("Google Drive (–æ—Ç–∫–ª—é—á–µ–Ω)")
    
    if storage_info:
        st.info(f"üí° –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: {', '.join(storage_info)}")
    
