"""
–ú–æ–¥—É–ª—å –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ–¥–∏–Ω–æ—á–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–∫–∞–ø–æ–≤
"""

import streamlit as st
import time
from PIL import Image
from image_processor import ImageProcessor

def single_generation_interface():
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–¥–∏–Ω–æ—á–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–∫–∞–ø–æ–≤"""
    
    st.subheader("üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∫–∞–ø–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    if "product_image" in st.session_state and "logo_image" in st.session_state:
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        col1, col2 = st.columns(2)
        
        with col1:
            st.write("**üì¶ –¢–æ–≤–∞—Ä:**")
            st.image(st.session_state.product_image, width=200)
        
        with col2:
            st.write("**üè∑Ô∏è –õ–æ–≥–æ—Ç–∏–ø:**")
            st.image(st.session_state.logo_image, width=200)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        with st.expander("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", expanded=True):
            col1, col2 = st.columns(2)
            
            with col1:
                mockup_style = st.selectbox(
                    "–°—Ç–∏–ª—å –º–æ–∫–∞–ø–∞",
                    ["modern", "vintage", "minimalist", "luxury", "casual", "sporty"],
                    index=0,
                    help="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–∫–∞–ø–∞"
                )
                
                product_color = st.selectbox(
                    "–¶–≤–µ—Ç —Ç–æ–≤–∞—Ä–∞",
                    ["–±–µ–ª—ã–π", "—á–µ—Ä–Ω—ã–π", "—Å–µ—Ä—ã–π", "—Å–∏–Ω–∏–π", "–∫—Ä–∞—Å–Ω—ã–π", "–∑–µ–ª–µ–Ω—ã–π", "–∫–∞–∫ –Ω–∞ —Ñ–æ—Ç–æ"],
                    index=6,
                    help="–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç —Ç–æ–≤–∞—Ä–∞"
                )
                
                product_angle = st.selectbox(
                    "–†–∞–∫—É—Ä—Å",
                    ["—Å–ø–µ—Ä–µ–¥–∏", "—Å–±–æ–∫—É", "—Å–∑–∞–¥–∏", "—Å–≤–µ—Ä—Ö—É", "3/4"],
                    index=0,
                    help="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∫—É—Ä—Å –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–æ–≤–∞—Ä–∞"
                )
            
            with col2:
                logo_application = st.selectbox(
                    "–¢–∏–ø –Ω–∞–Ω–µ—Å–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞",
                    ["–≤—ã—à–∏–≤–∫–∞", "–ø–µ—á–∞—Ç—å", "–∞–ø–ø–ª–∏–∫–∞—Ü–∏—è", "–≤—ã—à–∏–≤–∫–∞+–ø–µ—á–∞—Ç—å", "–∫–∞–∫ –Ω–∞ —Ñ–æ—Ç–æ"],
                    index=0,
                    help="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –Ω–∞–Ω–µ—Å–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞"
                )
                
                logo_position = st.selectbox(
                    "–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞",
                    ["—Ü–µ–Ω—Ç—Ä", "–ª–µ–≤—ã–π –≤–µ—Ä—Ö", "–ø—Ä–∞–≤—ã–π –≤–µ—Ä—Ö", "–ª–µ–≤—ã–π –Ω–∏–∑", "–ø—Ä–∞–≤—ã–π –Ω–∏–∑", "–∫–∞–∫ –Ω–∞ —Ñ–æ—Ç–æ"],
                    index=0,
                    help="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞"
                )
                
                logo_size = st.selectbox(
                    "–†–∞–∑–º–µ—Ä –ª–æ–≥–æ—Ç–∏–ø–∞",
                    ["–æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π", "–º–∞–ª–µ–Ω—å–∫–∏–π", "—Å—Ä–µ–¥–Ω–∏–π", "–±–æ–ª—å—à–æ–π", "–æ—á–µ–Ω—å –±–æ–ª—å—à–æ–π", "–∫–∞–∫ –Ω–∞ —Ñ–æ—Ç–æ"],
                    index=0,
                    help="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –ª–æ–≥–æ—Ç–∏–ø–∞"
                )
            
            logo_color = st.selectbox(
                "–¶–≤–µ—Ç –ª–æ–≥–æ—Ç–∏–ø–∞",
                ["–∫–∞–∫ –Ω–∞ —Ñ–æ—Ç–æ", "–±–µ–ª—ã–π", "—á–µ—Ä–Ω—ã–π", "—Ü–≤–µ—Ç–Ω–æ–π", "–º–æ–Ω–æ—Ö—Ä–æ–º–Ω—ã–π"],
                index=0,
                help="–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –ª–æ–≥–æ—Ç–∏–ø–∞"
            )
            
            custom_prompt = st.text_area(
                "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è",
                placeholder="–û–ø–∏—à–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –º–æ–∫–∞–ø—É...",
                help="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–∫–∞–ø–∞"
            )
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
            col1, col2, col3 = st.columns(3)
            with col1:
                add_tag = st.checkbox("–î–æ–±–∞–≤–∏—Ç—å –±–∏—Ä–∫—É", help="–î–æ–±–∞–≤–∏—Ç—å –±–∏—Ä–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ")
            with col2:
                add_person = st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏", help="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ —á–µ–ª–æ–≤–µ–∫–µ")
            with col3:
                add_badge = st.checkbox("–î–æ–±–∞–≤–∏—Ç—å —à–∏–ª—å–¥–∏–∫", help="–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π —à–∏–ª—å–¥–∏–∫")
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        if "pattern_image" in st.session_state:
            st.write("**üé® –ü–∞—Ç—Ç–µ—Ä–Ω:**")
            st.image(st.session_state.pattern_image, width=100)
        
        # –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–æ–∫–∞–ø", type="primary", use_container_width=True):
            # –ü–æ–ª—É—á–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
            from main import get_mockup_generator
            generator = get_mockup_generator()
            
            # –°–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç
            extended_prompt = custom_prompt.strip()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
            if add_tag:
                extended_prompt += " –î–æ–±–∞–≤–∏—Ç—å –±–∏—Ä–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ."
            if add_person:
                extended_prompt += " –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–µ."
            if add_badge:
                extended_prompt += " –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π —à–∏–ª—å–¥–∏–∫ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –Ω–∞ —Ç–æ–≤–∞—Ä."
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –ø–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
            if "pattern_image" in st.session_state:
                extended_prompt += " –°–æ–∑–¥–∞—Ç—å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º –ø–æ –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞."
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤ —Å—Ö–ª–æ–ø—ã–≤–∞—é—â–µ–º—Å—è –±–ª–æ–∫–µ
            with st.expander("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"):
                st.info(f"üì¶ –¢–æ–≤–∞—Ä: {mockup_style} —Å—Ç–∏–ª—å, {product_color} —Ü–≤–µ—Ç, {product_angle} —Ä–∞–∫—É—Ä—Å")
                st.info(f"üè∑Ô∏è –õ–æ–≥–æ—Ç–∏–ø: {logo_application}, {logo_position}, {logo_size} —Ä–∞–∑–º–µ—Ä, {logo_color} —Ü–≤–µ—Ç")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
            additional_options = []
            if add_tag:
                additional_options.append("–±–∏—Ä–∫–∞")
            if add_person:
                additional_options.append("–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏")
            if add_badge:
                additional_options.append("—à–∏–ª—å–¥–∏–∫")
            if "pattern_image" in st.session_state:
                additional_options.append("–ø–∞—Ç—Ç–µ—Ä–Ω")
            
            if additional_options:
                st.info(f"üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: {', '.join(additional_options)}")
            
            if custom_prompt.strip():
                st.info(f"üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è: {custom_prompt}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            st.info("üöÄ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–æ–∫–∞–ø —Å –ø–æ–º–æ—â—å—é AI...")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ —Å–µ—Å—Å–∏–∏
            product_image = st.session_state.product_image
            logo_image = st.session_state.logo_image
            pattern_image = st.session_state.get("pattern_image", None)
            
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∫–∞–ø–æ–≤
            try:
                result = generator.generate_mockups(
                    product_image=product_image,
                    logo_image=logo_image,
                    style=mockup_style,
                    logo_application=logo_application,
                    custom_prompt=extended_prompt,
                    product_color=product_color,
                    product_angle=product_angle,
                    logo_position=logo_position,
                    logo_size=logo_size,
                    logo_color=logo_color,
                    pattern_image=pattern_image
                )
                
                if result["status"] == "success":
                    st.success(f"‚úÖ –ú–æ–∫–∞–ø—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∑–∞ {result['processing_time']:.2f} —Å–µ–∫—É–Ω–¥")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Gemini, –µ—Å–ª–∏ –µ—Å—Ç—å
                    if "mockups" in result and result["mockups"]:
                        for i, mockup in enumerate(result["mockups"]):
                            if "text_response" in mockup and mockup["text_response"]:
                                with st.expander(f"üìù –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Gemini (–º–æ–∫–∞–ø {i+1})"):
                                    st.write(mockup["text_response"])
                    
                    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                    from ui.display_results import display_results
                    display_results(result)
                    
                elif result["status"] == "partial_success":
                    st.warning("‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–∫–∞–ø—ã")
                    from ui.display_results import display_results
                    display_results(result)
                    
                else:
                    st.error("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–∫–∞–ø–æ–≤")
                    if "text_response" in result:
                        with st.expander("üìù –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Gemini"):
                            st.write(result["text_response"])
                    st.error(result.get("error", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"))
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –º–æ–∫–∞–ø—ã –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                    if "mockups" in result:
                        from ui.display_results import display_results
                        display_results(result)
                
            except Exception as e:
                st.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
                st.error("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    
    else:
        st.info("üëÜ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è –Ω–∞—á–∞–ª–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
    
