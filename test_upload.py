#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ FTP —Å–µ—Ä–≤–µ—Ä
"""

import ftplib
import os
import json
from datetime import datetime
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
load_dotenv('ftp_config.env')

def test_upload():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ –Ω–∞ FTP —Å–µ—Ä–≤–µ—Ä"""
    print("üöÄ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ FTP —Å–µ—Ä–≤–µ—Ä")
    print("=====================================")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ FTP
        ftp = ftplib.FTP()
        ftp.connect(os.getenv('FTP_HOST'), 21)
        ftp.login(os.getenv('FTP_USERNAME'), os.getenv('FTP_PASSWORD'))
        print("‚úÖ FTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É mockups
        ftp.cwd('/public_html/mockups')
        print("‚úÖ –ü–µ—Ä–µ—à–ª–∏ –≤ –ø–∞–ø–∫—É mockups")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π JSON —Ñ–∞–π–ª
        test_data = {
            "filename": "test_mockup.jpg",
            "metadata": {
                "mockup_style": "–¢–µ—Å—Ç–æ–≤—ã–π —Å—Ç–∏–ª—å",
                "logo_application": "–¢–µ—Å—Ç–æ–≤–æ–µ –Ω–∞–Ω–µ—Å–µ–Ω–∏–µ",
                "logo_placement": "–¶–µ–Ω—Ç—Ä",
                "test": True
            },
            "created_at": datetime.now().isoformat(),
            "source": "ftp_test"
        }
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª
        json_filename = "test_mockup.json"
        json_data = json.dumps(test_data, ensure_ascii=False, indent=2)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
        from io import BytesIO
        json_buffer = BytesIO(json_data.encode('utf-8'))
        ftp.storbinary(f'STOR {json_filename}', json_buffer)
        print(f"‚úÖ –§–∞–π–ª {json_filename} –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        text_filename = "test.txt"
        text_data = "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ–±-–¥–æ—Å—Ç—É–ø–∞"
        text_buffer = BytesIO(text_data.encode('utf-8'))
        ftp.storbinary(f'STOR {text_filename}', text_buffer)
        print(f"‚úÖ –§–∞–π–ª {text_filename} –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏
        print("\nüìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ mockups:")
        contents = []
        ftp.retrlines('LIST', contents.append)
        
        for item in contents:
            print(f"  {item}")
        
        ftp.quit()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ–±-–¥–æ—Å—Ç—É–ø
        print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–¥–æ—Å—Ç—É–ø–∞:")
        import urllib.request
        try:
            response = urllib.request.urlopen('http://search.headcorn.pro/mockups/test.txt')
            content = response.read().decode('utf-8')
            print(f"‚úÖ –í–µ–±-–¥–æ—Å—Ç—É–ø —Ä–∞–±–æ—Ç–∞–µ—Ç: {content}")
        except Exception as e:
            print(f"‚ùå –í–µ–±-–¥–æ—Å—Ç—É–ø –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    test_upload()
