"""
–ú–æ–¥—É–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è AI Mockup Generator
–ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –ø–∞—Ä–æ–ª–µ–º
"""
import streamlit as st
import hashlib
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
AUTH_ENABLED = os.getenv('AUTH_ENABLED', 'true').lower() == 'true'
AUTH_PASSWORD = os.getenv('AUTH_PASSWORD', 'admin123')  # –ü–∞—Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
AUTH_SESSION_KEY = 'authenticated'

def hash_password(password: str) -> str:
    """–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    return hashlib.sha256(password.encode()).hexdigest()

def check_password(password: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è"""
    if not AUTH_ENABLED:
        return True
    
    hashed_input = hash_password(password)
    hashed_stored = hash_password(AUTH_PASSWORD)
    return hashed_input == hashed_stored

def is_authenticated() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    if not AUTH_ENABLED:
        return True
    
    return st.session_state.get(AUTH_SESSION_KEY, False)

def login_form() -> bool:
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞"""
    if not AUTH_ENABLED:
        return True
    
    st.markdown("""
    <div style="text-align: center; padding: 2rem;">
        <h1>üîê AI Mockup Generator</h1>
        <p style="color: #666; font-size: 1.1rem;">–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é</p>
    </div>
    """, unsafe_allow_html=True)
    
    # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        st.markdown("---")
        
        with st.form("login_form"):
            st.markdown("### üîë –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
            
            password = st.text_input(
                "–ü–∞—Ä–æ–ª—å",
                type="password",
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å",
                help="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é"
            )
            
            submitted = st.form_submit_button("üöÄ –í–æ–π—Ç–∏", type="primary", use_container_width=True)
            
            if submitted:
                if check_password(password):
                    st.session_state[AUTH_SESSION_KEY] = True
                    st.success("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!")
                    st.rerun()
                else:
                    st.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!")
        
        st.markdown("---")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
        with st.expander("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ"):
            st.markdown("""
            **AI Mockup Generator** - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –º–æ–∫–∞–ø–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ —Å –ª–æ–≥–æ—Ç–∏–ø–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.
            
            **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
            - üé® AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∫–∞–ø–æ–≤ —Å Gemini 2.5 Flash
            - üè∑Ô∏è –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ª–æ–≥–æ—Ç–∏–ø–æ–≤
            - üì¶ –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π
            - üíæ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            
            **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:**
            - –î–æ—Å—Ç—É–ø –∑–∞—â–∏—â–µ–Ω –ø–∞—Ä–æ–ª–µ–º
            - –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ
            - API –∫–ª—é—á–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
            """)
    
    return False

def logout_button():
    """–ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞"""
    if not AUTH_ENABLED:
        return
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
    col1, col2, col3 = st.columns([1, 1, 1])
    
    with col3:
        if st.button("üö™ –í—ã–π—Ç–∏", type="secondary", help="–í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"):
            st.session_state[AUTH_SESSION_KEY] = False
            st.rerun()

def require_auth(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –∑–∞—â–∏—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π"""
    def wrapper(*args, **kwargs):
        if not is_authenticated():
            login_form()
            return None
        return func(*args, **kwargs)
    return wrapper

def auth_status():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    if not AUTH_ENABLED:
        return "üîì –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞"
    
    if is_authenticated():
        return "üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
    else:
        return "üîí –ù–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
