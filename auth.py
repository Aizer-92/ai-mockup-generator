"""
–ú–æ–¥—É–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è AI Mockup Generator
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Streamlit —Å OIDC
"""
import streamlit as st
from config import get_config

# –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
config = get_config()
AUTH_ENABLED = config['AUTH_ENABLED']

def is_authenticated() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    if not AUTH_ENABLED:
        return True
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Streamlit
    return st.user.is_logged_in

def login_form() -> bool:
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞"""
    if not AUTH_ENABLED:
        return True
    
    st.markdown("""
    <div style="text-align: center; padding: 2rem;">
        <h1>üîê AI Mockup Generator</h1>
        <p style="color: #666; font-size: 1.1rem;">–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é</p>
    </div>
    """, unsafe_allow_html=True)
    
    # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        st.markdown("---")
        
        st.markdown("### üîë –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ª–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é Streamlit
            if st.button("üöÄ –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google", type="primary", use_container_width=True):
                st.login("google")
            
            st.markdown("---")
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
            with st.expander("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ"):
                st.markdown("""
                **AI Mockup Generator** - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –º–æ–∫–∞–ø–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ —Å –ª–æ–≥–æ—Ç–∏–ø–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.
                
                **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
                - üé® AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∫–∞–ø–æ–≤ —Å Gemini 2.5 Flash
                - üè∑Ô∏è –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ª–æ–≥–æ—Ç–∏–ø–æ–≤
                - üì¶ –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π
                - üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                - üíæ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                
                **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:**
                - üîê –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ Google
                - üõ°Ô∏è –ó–∞—â–∏—â–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
                - üîí –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏
                """)
                
                st.info("üí° –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã")
        
        except Exception as e:
            st.error("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
            st.error(f"–î–µ—Ç–∞–ª–∏: {str(e)}")
            
            with st.expander("üîß –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞"):
                st.markdown("""
                **–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏**
                
                –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ `.streamlit/secrets.toml` –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OIDC:
                
                ```toml
                [auth]
                redirect_uri = "http://localhost:8501/oauth2callback"
                cookie_secret = "your-secret-key"
                
                [auth.google]
                client_id = "your-google-client-id"
                client_secret = "your-google-client-secret"
                server_metadata_url = "https://accounts.google.com/.well-known/openid-configuration"
                ```
                """)
    
    return False

def logout_button():
    """–ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞"""
    if not AUTH_ENABLED:
        return
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
    col1, col2, col3 = st.columns([1, 1, 1])
    
    with col3:
        if st.button("üö™ –í—ã–π—Ç–∏", type="secondary", help="–í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"):
            st.logout()

def require_auth(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –∑–∞—â–∏—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π"""
    def wrapper(*args, **kwargs):
        if not is_authenticated():
            login_form()
            return None
        return func(*args, **kwargs)
    return wrapper

def auth_status():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    if not AUTH_ENABLED:
        return "üîì –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞"
    
    if is_authenticated():
        user_name = st.user.name if hasattr(st.user, 'name') and st.user.name else "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        return f"üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ {user_name}"
    else:
        return "üîí –ù–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"

def get_user_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    if not AUTH_ENABLED or not is_authenticated():
        return None
    
    return {
        'name': getattr(st.user, 'name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'),
        'email': getattr(st.user, 'email', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'),
        'is_logged_in': st.user.is_logged_in
    }